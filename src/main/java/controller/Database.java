/*package controller;import model.*;import java.sql.*;import java.util.ArrayList;import java.util.List;// Class to access the databasepublic class Database {    private static final String username = "dab_di21222b_41";    private static final String password = "hGqSYm23uiZwibLy";    private static final String url ="jdbc:postgresql://bronto.ewi.utwente.nl/"+username+"?currentSchema=Test";    private static List<Car> carsGlobal;    public static List<Car> getCars() { // Gets all options for a certain car        List<Car> cars = new ArrayList<>();        *//*cars.add(new Car(0L, 2020L, 500.0, "BMW", "3 series"));        cars.add(new Car(1L, 2021L, 650.0, "BMW", "3 series"));        cars.add(new Car(2L, 2020L, 450.0, "Mazda", "CX7"));*//*        try (Connection connection = DriverManager.getConnection(url, username, password)) {            String query = "SELECT * FROM dab_di21222b_41.test.car ORDER BY id";            Statement statement = connection.createStatement();            ResultSet results = statement.executeQuery(query);            while (results.next()) { //Create new Option object and store it for every row                cars.add(new Car(results.getLong("id"), results.getLong("production_year"),                        results.getDouble("price"), results.getString("make"),                        results.getString("model")));            }        } catch (SQLException e){            e.printStackTrace();        }//        carsGlobal = cars;        return cars;    }    public static Car getCar(Long carId) { // Gets all options for a certain car        try (Connection connection = DriverManager.getConnection(url, username, password)) {            String query = "SELECT * FROM dab_di21222b_41.test.car WHERE id = " + carId + "ORDER BY id";            Statement statement = connection.createStatement();            ResultSet results = statement.executeQuery(query);            results.next();            return new Car(results.getLong("id"), results.getLong("production_year"),                    results.getDouble("price"), results.getString("make"),                    results.getString("model"));        } catch (SQLException e){            e.printStackTrace();        }        return null;//        return carsGlobal.get(carId.intValue());    }    public static List<Option> getOptions(Long carId) { // Gets all options for a certain car        List<Option> options = new ArrayList<>();        *//*options.add(new Option(0L, "Alpinweiss II", "BMW", 1L, "paint", 0.0, new Date(2015, 12, 15), null));        options.add(new Option(2L, "Stof Hevelius Anthrazit/Schwarz", "BMW", 1L, "interior", 0.0, new Date(2015, 12, 15), null));        options.add(new Option(4L, "M sport seats front", "BMW", 1L, "interior extras", 23.0, new Date(2015, 12, 15), null));        options.add(new Option(1L, "Dravitgrau metallic", "BMW", 1L, "paint", 46.25, new Date(2015, 12, 15), null));        options.add(new Option(3L, "Leder Vernasca Mokka", "BMW", 1L, "interior", 50.0, new Date(2015, 12, 15), null));*//*        try (Connection connection = DriverManager.getConnection(url, username, password)) {            String query = "SELECT * FROM dab_di21222b_41.test.option WHERE car_id = "+carId+" ORDER BY price";            Statement statement = connection.createStatement();            ResultSet results = statement.executeQuery(query);            while (results.next()) { //Create new Option object and store it for every row                options.add(new Option(results.getLong("id"), results.getString("value"),                        results.getString("manufacturer"), results.getLong("car_id"),                        results.getString("option_type"), results.getDouble("price"),                        results.getDate("start_date"), results.getDate("end_date")));            }        } catch (SQLException e){            e.printStackTrace();        }        return options;    }    public static List<Rule> getRules(Long carId) { // Gets rules for a certain car        List<Rule> rules = new ArrayList<>();//Create empty list for the rules        *//*rules.add(new Rule(new Long[]{0L, 1L}, true, true, 1L));        rules.add(new Rule(new Long[]{2L, 4L}, true, false, 1L));        rules.add(new Rule(new Long[]{2L, 3L}, true, true, 1L));*//*        try (Connection connection = DriverManager.getConnection(url, username, password)) { //Create a connection            String query = "SELECT * FROM dab_di21222b_41.test.rule WHERE car_id = " + carId;            Statement statement = connection.createStatement();            ResultSet results = statement.executeQuery(query);            while (results.next()) { //Create new Option object and store it for every row                rules.add(new Rule((Long[]) results.getArray("options").getArray(), results.getBoolean("exclusive"),                        results.getBoolean("mandatory"), results.getLong("car_id")));            }        } catch (SQLException e) {            e.printStackTrace();        }        return rules;    }}*/